buildscript {

    ext {
        kotlinVersion = "1.3.72"
        kotlinCoroutinesVersion = "1.3.7"
        springBootVersion = "2.3.1.RELEASE"
        springCloudVersion = "Hoxton.SR6"
        springBootStateMachineVersion = "2.2.1.RELEASE"
        jupiterVersion = "5.7.0-M1"
        postgresqlVersion = "42.2.18"
        flywayCoreVersion = "5.2.4"
        ktlintVersion = "9.2.1"
        swaggerUiVersion = "2.9.2"
    }

    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "org.jlleitschuh.gradle:ktlint-gradle:$ktlintVersion"
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'org.jetbrains.kotlin.jvm'
apply plugin: 'org.jetbrains.kotlin.plugin.spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.jlleitschuh.gradle.ktlint'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_11
}
compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_11
}

repositories {
    mavenCentral()
    jcenter()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-stdlib")
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    implementation("org.postgresql:postgresql:$postgresqlVersion")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-aop")
    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-configuration-processor")
//    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
    implementation("org.springframework.boot:spring-boot-starter-data-jdbc")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.flywaydb:flyway-core:$flywayCoreVersion")

    implementation("org.springframework.statemachine:spring-statemachine-core:$springBootStateMachineVersion")
    implementation("org.springframework.statemachine:spring-statemachine-kryo:$springBootStateMachineVersion")

    implementation("io.springfox:springfox-swagger2:$swaggerUiVersion")
    implementation("io.springfox:springfox-swagger-ui:$swaggerUiVersion")
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("org.junit.jupiter:junit-jupiter:$jupiterVersion")
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.vvalitsky.stm.StmApplication',
                'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Built-By': System.getProperty('user.name'),
                'Built-JDK': System.getProperty('java.version'),
                'Build-Time': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        )
    }
}